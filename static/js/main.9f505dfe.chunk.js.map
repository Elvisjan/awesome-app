{"version":3,"sources":["global-styles.js","lib/fetching/index.js","lib/inputhandler/index.js","lib/refetching/index.js","pages/home/model.js","ui/atoms/input.js","ui/atoms/title.js","ui/atoms/listItem.js","ui/atoms/list.js","ui/atoms/label.js","ui/atoms/form.js","ui/atoms/header.js","ui/atoms/text.js","ui/atoms/button.js","ui/atoms/spinner.js","ui/atoms/section.js","ui/atoms/img.js","ui/molecules/search.js","pages/home/page.js","app.js","index.js"],"names":["GlobalStyles","createGlobalStyle","fetching","createEffect","handler","city","a","async","url","fetch","req","json","triggerSample","createEvent","inputHandler","e","preventDefault","refetchWeather","store","st","addValue","deleteItem","$cityNames","createStore","JSON","parse","localStorage","getItem","name","on","done","state","result","params","cod","find","item","toLowerCase","push","index","filter","_","i","$cityList","oldValue","indexOf","temperature","main","temp","feels","feels_like","weather","toUpperCase","id","$inputValue","currentTarget","value","reset","updates","watch","newState","setItem","shortName","stringify","getState","length","sample","source","clock","target","Input","styled","input","H1","h1","ListItem","li","List","ul","Label","label","Form","form","Header","header","Text","div","Button","button","spin","keyframes","Spinner","Section","section","Img","img","Search","submiter","placeholder","type","changer","onSubmit","onChange","HomePage","names","useStore","React","useEffect","timer","setInterval","clearInterval","className","SpinnerContainer","spinner","CityList","useList","listItem","description","parseInt","alt","src","icon","onClick","createComponent","pending","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9f505dfe.chunk.js","sourcesContent":["import { createGlobalStyle } from \"styled-components\"\r\n\r\nexport const GlobalStyles = createGlobalStyle`\r\n\r\nbody {\r\n  height: 100vh;\r\n  display: grid;\r\n}\r\n#root {\r\n  height: 100vh;\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\n`\r\n","import { createEffect } from \"effector\"\r\n\r\nexport const fetching = createEffect({\r\n  handler: async (city) => {\r\n    const url = `https://api.openweathermap.org/data/2.5/weather?APPID=a82f5bd7cf235d2d97cf411fd97a845d&units=metric&lang=ru&q=${city}`\r\n    const req = await fetch(url)\r\n    return req.json()\r\n  },\r\n})\r\n","import { createEvent } from \"effector\"\r\nexport const triggerSample = createEvent(\"trigger sample\")\r\n\r\nexport const inputHandler = (e) => {\r\n  e.preventDefault()\r\n  triggerSample()\r\n}\r\n","import { createEffect } from \"effector\"\r\nimport { fetching } from \"../fetching\"\r\n\r\nexport const refetchWeather = createEffect({\r\n  handler: async (store, handler) => {\r\n    for (let st of store) {\r\n      await fetching(st)\r\n    }\r\n  },\r\n})\r\n","import { sample, createStore, createEvent } from \"effector\"\r\nimport { fetching, triggerSample, refetchWeather } from \"../../lib\"\r\nexport const addCity = createEvent(\"add city\")\r\nexport const addValue = createEvent(\"add input value\")\r\nexport const deleteItem = createEvent(\"delete item\")\r\n\r\nexport const $cityNames = createStore(\r\n  JSON.parse(localStorage.getItem(\"cityNames\")) || [],\r\n  { name: \"cityNames\" }\r\n)\r\n  .on(fetching.done, (state, { result, params }) => {\r\n    if (result.cod === 200) {\r\n      state = [...state]\r\n      const oldValue = state.find(\r\n        (item) => item.toLowerCase() === params.toLowerCase()\r\n      )\r\n      if (oldValue) return\r\n      else {\r\n        state.push(params)\r\n      }\r\n      return state\r\n    } else return\r\n  })\r\n  .on(deleteItem, (state, index) => state.filter((_, i) => i !== index))\r\n\r\nexport const $cityList = createStore(\r\n  JSON.parse(localStorage.getItem(\"cityList\")) || [],\r\n  { name: \"cityList\" }\r\n)\r\n  .on(deleteItem, (state, index) => state.filter((_, i) => i !== index))\r\n  .on(fetching.done, (state, { result, params }) => {\r\n    state = [...state]\r\n    const oldValue = state.find(\r\n      (item) => item.name.toLowerCase() === params.toLowerCase()\r\n    )\r\n    if (oldValue) {\r\n      state[state.indexOf(oldValue)] = {\r\n        ...oldValue,\r\n        temperature: result.main.temp,\r\n        feels: result.main.feels_like,\r\n        weather: result.weather,\r\n      }\r\n    } else {\r\n      state.push({\r\n        name: params.toUpperCase(),\r\n        weather: result.weather,\r\n        temperature: result.main.temp,\r\n        cod: result.cod,\r\n        id: result.id,\r\n        feels: result.main.feels_like,\r\n      })\r\n    }\r\n    return state\r\n  })\r\n\r\nexport const $inputValue = createStore(\"\")\r\n  .on(addValue, (_, e) => e.currentTarget.value)\r\n  .reset(fetching)\r\n\r\n$cityNames.updates.watch((newState) =>\r\n  localStorage.setItem($cityNames.shortName, JSON.stringify(newState))\r\n)\r\n$cityList.updates.watch((newState) =>\r\n  localStorage.setItem($cityList.shortName, JSON.stringify(newState))\r\n)\r\n\r\n$cityList.getState().length < 1 && fetching(\"МОСКВА\")\r\n$cityNames.getState().length > 0 && refetchWeather($cityNames.getState())\r\n\r\nsample({\r\n  source: $inputValue,\r\n  clock: triggerSample,\r\n  target: fetching,\r\n})\r\n","import styled from \"styled-components\"\r\n\r\nexport const Input = styled.input`\r\n  width: 18rem;\r\n  height: 2rem;\r\n  background-color: lightgray;\r\n  border-radius: 3px;\r\n  border: none;\r\n  color: black;\r\n  margin-left: 10px;\r\n  padding-left: 18px;\r\n  ::placeholder {\r\n    font-size: 17px;\r\n    width: 100%;\r\n    color: black;\r\n  }\r\n`\r\n","import styled from \"styled-components\"\r\n\r\nexport const H1 = styled.h1`\r\n  margin: 0;\r\n  width: 100%;\r\n  height: 30%;\r\n  color: white;\r\n  font-size: 4rem;\r\n  text-align: center;\r\n  @media (max-width: 768px) {\r\n    width: 80%;\r\n    position: relative;\r\n    left: 50%;\r\n    top: 50%;\r\n    transform: translate(-50%, -50%);\r\n    font-size: 2rem;\r\n  }\r\n`\r\n","import styled from \"styled-components\"\r\n\r\nexport const ListItem = styled.li`\r\n  display: grid;\r\n  margin-left: -15px;\r\n  grid-gap: 20px;\r\n  grid-template-columns: 1fr 20px 120px;\r\n  color: #fff;\r\n  font-size: 17px;\r\n  width: 98%;\r\n`\r\n","import styled from \"styled-components\"\r\n\r\nexport const List = styled.ul`\r\n  height: 100%;\r\n  list-style: none;\r\n  margin-bottom: 0;\r\n`\r\n","import styled from \"styled-components\"\r\n\r\nexport const Label = styled.label`\r\n  padding-left: 20px;\r\n  font-size: 25px;\r\n  color: #fff;\r\n`\r\n","import styled from \"styled-components\"\r\n\r\nexport const Form = styled.form``\r\n","import styled from \"styled-components\"\r\n\r\nexport const Header = styled.header`\r\n  position: relative;\r\n  height: 150px;\r\n  background: linear-gradient(to right, #2c3e50, #3498db);\r\n  @media (max-width: 768px) {\r\n    position: relative;\r\n    height: 250px;\r\n  }\r\n`\r\n","import styled from \"styled-components\"\r\n\r\nexport const Text = styled.div`\r\n  text-align: center;\r\n  color: #fff;\r\n  font-size: 36px;\r\n`\r\n","import styled from \"styled-components\"\r\n\r\nexport const Button = styled.button`\r\n  border-style: none;\r\n  outline: none;\r\n  width: 120px;\r\n  height: 30px;\r\n  border-radius: 10px;\r\n  background-color: green;\r\n  color: #fff;\r\n  :hover {\r\n    opacity: 0.9;\r\n  }\r\n  :active {\r\n    background-color: red;\r\n  }\r\n`\r\n","import styled, { keyframes } from \"styled-components\"\r\n\r\nconst spin = keyframes`\r\n  0% {\r\n    transform: rotate(0deg);\r\n  }\r\n  100% {\r\n    transform: rotate(360deg);\r\n  }  \r\n`\r\n\r\nexport const Spinner = styled.div`\r\n  display: inline-block;\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 0%;\r\n  background-color: green;\r\n  color: #fff;\r\n  font-size: 16px;\r\n  width: 280px;\r\n  height: 20px;\r\n  text-align: center;\r\n  border-radius: 5px;\r\n  ::after {\r\n    content: \" \";\r\n    display: block;\r\n    position: absolute;\r\n    left: 75%;\r\n    width: 35px;\r\n    height: 35px;\r\n    border-radius: 50%;\r\n    border: 6px solid #fff;\r\n    border-color: yellow transparent yellow transparent;\r\n    animation: 1.2s ${spin} linear infinite;\r\n  }\r\n  @media (max-width: 768px) {\r\n    top: 10%;\r\n    left: 0;\r\n    width: 100%;\r\n    background-color: none;\r\n  }\r\n`\r\n","import styled from \"styled-components\"\r\n\r\nexport const Section = styled.section`\r\n  min-height: 740px;\r\n  background: linear-gradient(to right, #2c3e50, #4ca1af);\r\n`\r\n","import styled from \"styled-components\"\r\n\r\nexport const Img = styled.img`\r\n  width: 30px;\r\n  height: 30px;\r\n`\r\n","import React from \"react\"\r\n\r\nimport { Form, Input, Label } from \"../atoms\"\r\n\r\nexport const Search = ({\r\n  submiter,\r\n  value,\r\n  placeholder,\r\n  type,\r\n  changer,\r\n  label,\r\n}) => {\r\n  return (\r\n    <Form onSubmit={submiter}>\r\n      <Label>{label}</Label>\r\n      <Input\r\n        type={type}\r\n        value={value}\r\n        placeholder={placeholder}\r\n        onChange={changer}\r\n      />\r\n    </Form>\r\n  )\r\n}\r\n","import React from \"react\"\r\nimport { useStore, useList, createComponent } from \"effector-react\"\r\nimport {\r\n  $cityList,\r\n  $cityNames,\r\n  $inputValue,\r\n  addValue,\r\n  deleteItem,\r\n} from \"./model\"\r\nimport { inputHandler, fetching, refetchWeather } from \"../../lib\"\r\nimport {\r\n  Header,\r\n  H1,\r\n  Text,\r\n  Spinner,\r\n  Section,\r\n  List,\r\n  ListItem,\r\n  Button,\r\n  Img,\r\n  Search,\r\n} from \"../../ui\"\r\n\r\nexport const HomePage = () => {\r\n  const names = useStore($cityNames)\r\n  React.useEffect(() => {\r\n    const timer = setInterval(() => {\r\n      refetchWeather(names)\r\n    }, 60000)\r\n    return () => clearInterval(timer)\r\n  }, [names])\r\n\r\n  return (\r\n    <>\r\n      <Header className=\"App-header\">\r\n        <H1>Классное погодное приложение</H1>\r\n        <SpinnerContainer spinner={Spinner}></SpinnerContainer>\r\n      </Header>\r\n      <Section>\r\n        <Search\r\n          value={useStore($inputValue)}\r\n          changer={addValue}\r\n          type=\"text\"\r\n          placeholder=\"Например: Нижний Новгород\"\r\n          submiter={inputHandler}\r\n          label=\"Введите название города\"\r\n        />\r\n        {useStore($cityList).length > 0 ? (\r\n          <CityList />\r\n        ) : (\r\n          <Text>Добавьте город</Text>\r\n        )}\r\n      </Section>\r\n    </>\r\n  )\r\n}\r\nconst CityList = () =>\r\n  useList($cityList, ({ name, weather, temperature, cod, feels }, index) => {\r\n    const listItem =\r\n      cod === 200 ? (\r\n        <ListItem>\r\n          В городе {name} в данный момент {weather[0].description}, температура\r\n          воздуха составляет {parseInt(temperature)} &#176; по цельсию,\r\n          чувствуется как {parseInt(feels)}&#176; по цельсию{\" \"}\r\n          <Img\r\n            alt=\"погодное условие\"\r\n            src={`http://openweathermap.org/img/w/${weather[0].icon}.png`}\r\n          />\r\n          <Button\r\n            type=\"button\"\r\n            onClick={() => {\r\n              deleteItem(index)\r\n            }}\r\n          >\r\n            Удалить\r\n          </Button>\r\n        </ListItem>\r\n      ) : null\r\n    return <List>{listItem}</List>\r\n  })\r\nconst SpinnerContainer = createComponent(fetching.pending, (_, pending) =>\r\n  pending ? <Spinner>Идёт загрузка, пожалуйста, подождите</Spinner> : null\r\n)\r\n","import React from \"react\"\r\nimport { Normalize } from \"styled-normalize\"\r\nimport { GlobalStyles } from \"./global-styles\"\r\nimport { HomePage } from \"./pages\"\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <Normalize />\r\n      <GlobalStyles />\r\n      <HomePage />\r\n    </>\r\n  )\r\n}\r\nexport default App\r\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\n\nimport App from \"./app\"\n\nReactDOM.render(<App />, document.getElementById(\"root\"))\n"],"sourceRoot":""}