{"version":3,"sources":["features/common/localstorage/index.js","pages/lib/deleteitem/index.js","pages/lib/fetchweather/index.js","pages/lib/inputhandler/index.js","pages/lib/refetchweather/index.js","pages/home/model.js","ui/atoms/input.js","ui/atoms/title.js","ui/atoms/listItem.js","ui/atoms/list.js","ui/atoms/label.js","ui/atoms/form.js","ui/atoms/header.js","ui/atoms/text.js","ui/atoms/button.js","ui/atoms/spinner.js","ui/atoms/body.js","ui/atoms/section.js","ui/atoms/img.js","ui/molecules/search.js","pages/home/page.js","App.js","index.js"],"names":["root","createDomain","onCreateStore","store","snapshot","localStorage","getItem","shortName","setState","JSON","parse","isFirstSkiped","watch","newState","setItem","stringify","createEvent","event","createStore","effect","deleteItem","fetching","createEffect","handler","city","a","async","url","fetch","req","json","triggerSample","inputHandler","e","preventDefault","refetchWeather","st","addValue","$cityNames","name","on","done","state","result","params","cod","find","item","toLowerCase","push","index","filter","_","i","$cityList","oldValue","indexOf","temperature","main","temp","toFixed","feels","feels_like","weather","toUpperCase","id","getState","length","$inputValue","currentTarget","value","reset","sample","source","clock","target","Input","styled","input","H1","h1","ListItem","li","List","ul","Label","label","Form","form","Header","header","Text","div","Button","button","spin","keyframes","Spinner","body","Section","section","Img","img","Search","submiter","placeholder","type","changer","onSubmit","onChange","HomePage","names","useStore","React","useEffect","timer","setInterval","clearInterval","className","SpinnerContainer","spinner","CityList","useList","listItem","description","parseInt","alt","src","icon","onClick","createComponent","pending","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c6673d82.chunk.js","sourcesContent":["import {createDomain}  from \"effector\";\r\n\r\nconst root = createDomain(\"root\");\r\n\r\nroot.onCreateStore(store => {\r\n  const snapshot = localStorage.getItem(store.shortName);\r\n  if (snapshot !== null) store.setState(JSON.parse(snapshot));\r\n\r\n  let isFirstSkiped = false;\r\n  store.watch(newState => {\r\n    if (isFirstSkiped) {\r\n      localStorage.setItem(store.shortName, JSON.stringify(newState));\r\n    }\r\n    isFirstSkiped = true;\r\n  });\r\n  return store;\r\n});\r\n\r\nexport const createEvent = root.event;\r\nexport const createEffect = root.effect;\r\nexport const createStore = root.store;","import {createEvent} from 'effector'\r\n\r\nexport const deleteItem = createEvent();","import {createEffect} from 'effector'\r\n\r\nexport const fetching = createEffect({\r\n  handler: async (city) => {\r\n    const url = `https://api.openweathermap.org/data/2.5/weather?APPID=a82f5bd7cf235d2d97cf411fd97a845d&units=metric&lang=ru&q=${city}`\r\n    const req = await fetch(url)\r\n    return req.json()\r\n  },\r\n})","import { createEvent } from 'effector'\r\nexport const triggerSample = createEvent('trigger sample')\r\n\r\nexport const inputHandler = (e) => {\r\n  e.preventDefault()\r\n  triggerSample()\r\n}","import {createEffect} from 'effector';\r\nimport {fetching} from '../fetchweather'\r\n\r\nexport const refetchWeather = createEffect({\r\n  handler: async (store) => {\r\n    for (let st of store) {\r\n     await fetching(st)\r\n    }\r\n }\r\n}) ","import {sample} from 'effector'\r\nimport {createStore, createEvent} from '../../features/common'\r\nimport {deleteItem,fetching ,triggerSample} from '../lib'\r\n\r\nexport const addCity = createEvent('add city')\r\nexport const addValue = createEvent('add input value')\r\n\r\nexport const $cityNames = createStore([\"Москва\"], {name: 'cityNames'})\r\n  .on(fetching.done, (state, {result, params}) => {\r\n    if (result.cod === 200) {\r\n      state =[...state]\r\n    const oldValue =state.find(item=> item.toLowerCase() === params.toLowerCase())\r\n    if (oldValue) return       \r\n    else {\r\n        state.push(params)\r\n      }\r\n       return state\r\n    } else return       \r\n    }   \r\n  )  \r\n  .on(deleteItem,(state, index)=> state.filter((_, i)=>i!==index))\r\n\r\nexport const $cityList = createStore(\r\n  [\r\n], {name: 'cityList'})\r\n  .on(deleteItem,(state, index)=> state.filter((_, i)=>i!==index))\r\n  .on(fetching.done, (state, {result, params}) => {\r\n    state = [...state]\r\n    const oldValue = state.find(item => item.name.toLowerCase() === params.toLowerCase())\r\n    if(oldValue) {     \r\n        state[state.indexOf(oldValue)] = {...oldValue, temperature: result.main.temp.toFixed(), feels:result.main.feels_like.toFixed(),\r\n        weather: result.weather}      \r\n    } else {\r\n       state.push({name: params.toUpperCase(), weather: result.weather, temperature: result.main.temp, cod: result.cod, id: result.id,\r\n       feels: result.main.feels_like})\r\n    }\r\n    return state\r\n  })\r\n $cityList.getState().length < 1 && fetching('МОСКВА')\r\n\r\n export const $inputValue = createStore(\"\")\r\n   .on(addValue, (_, e)=>  e.currentTarget.value)\r\n   .reset(fetching)\r\n\r\n sample({\r\n   source: $inputValue,\r\n   clock: triggerSample,\r\n   target: fetching\r\n })\r\n","import styled from 'styled-components'\r\n\r\nexport const Input = styled.input`\r\n  width: 20rem;\r\n  height: 2rem;\r\n  background-color: lightgray;\r\n  border-radius: 3px;\r\n  border: none;\r\n  color: black;\r\n  margin-left: 10px;\r\n  padding-left:18px;\r\n  ::placeholder {    \r\n    font-size: 17px;\r\n    width: 100%;\r\n    color: black;  \r\n  }\r\n`","import styled from 'styled-components'\r\n \r\nexport const H1 = styled.h1`\r\n  width: 100%;\r\n  height: 30%;\r\n  color: white;\r\n  font-size: 4rem;\r\n  text-align: center;\r\n  @media (max-width: 768px) {\r\n    width: 80%;\r\n    position: relative;\r\n    left: 5%;\r\n    top:50%;      \r\n    font-size: 2rem;\r\n  }\r\n`","import styled from 'styled-components'\r\n\r\nexport const ListItem = styled.li`\r\n  display: grid;\r\n  margin-left: -15px;\r\n  grid-gap: 20px;\r\n  grid-template-columns: 1fr 20px 120px;\r\n  color: #fff;\r\n  font-size: 17px;\r\n  width: 98%;\r\n`","import styled from 'styled-components'\r\n\r\nexport const List = styled.ul`\r\n  height: 100%;\r\n  list-style: none;  \r\n`","import styled from 'styled-components';\r\n\r\nexport const Label = styled.label`\r\n  padding-left: 20px;\r\n  font-size: 25px;\r\n  color: #fff;\r\n`","import styled from 'styled-components';\r\n\r\nexport const Form = styled.form`\r\n  \r\n`","import styled from 'styled-components';\r\n\r\nexport const Header = styled.header`\r\n  height: 150px;\r\n  margin-top: -43px;\r\n  background: linear-gradient(to right, #2c3e50, #3498db);\r\n  @media (max-width: 768px) {\r\n    position: relative;\r\n    height: 250px;\r\n  }\r\n`","import styled from 'styled-components';\r\n\r\nexport const Text = styled.div`\r\n  text-align:center;\r\n  color: #fff;\r\n  font-size: 36px;\r\n`","import styled from 'styled-components';\r\n\r\nexport const Button = styled.button`\r\n  border-style: none;\r\n  outline: none;\r\n  width: 120px;\r\n  height: 30px;\r\n  border-radius: 10px;\r\n  background-color: green;\r\n  color: #fff;\r\n  :hover {\r\n    opacity: 0.9;\r\n  }\r\n  :active {\r\n    background-color: red;\r\n  }\r\n`","import styled, {keyframes} from 'styled-components'\r\n\r\nconst spin = keyframes`\r\n  0% {\r\n    transform: rotate(0deg);\r\n  }\r\n  100% {\r\n    transform: rotate(360deg);\r\n  }  \r\n`\r\n\r\nexport const Spinner = styled.div`  \r\n  display: block;\r\n  background-color: green;\r\n  color: #fff;\r\n  margin-left: 355px;\r\n  font-size: 16px;\r\n  width: 280px;\r\n  height: 20px;\r\n  text-align: center;\r\n  border-radius: 5px;\r\n  @media (max-width: 768px) {\r\n    width: 100%;\r\n    margin-left: 0;\r\n    background-color: none;\r\n  }\r\n\r\n    ::after {\r\n      content: \" \";\r\n      display: block;\r\n      width: 64px;\r\n      height: 64px;\r\n      margin: 8px;\r\n      margin-top: -30px;\r\n      margin-left: 300px;\r\n      border-radius: 50%;\r\n      border: 6px solid #fff;\r\n      border-color: yellow transparent yellow transparent;\r\n      animation: 1.2s ${spin} linear infinite;\r\n}\r\n`\r\n","import styled from 'styled-components'\r\n\r\nexport const Body = styled.body`\r\n`","import styled from 'styled-components'\r\n\r\nexport const Section = styled.section`\r\n  min-height: 740px;\r\n  background: linear-gradient(to right, #2c3e50, #4ca1af);\r\n`","import styled from 'styled-components'\r\n\r\nexport const Img = styled.img`\r\n  width: 30px;\r\n  height: 30px;\r\n`","import React from 'react'\r\n\r\nimport {Form, Input, Label } from '../atoms'\r\n\r\nexport const Search = ({submiter, value, placeholder,type, changer,label}) => {\r\n  return (\r\n<Form onSubmit={submiter}>\r\n  <Label>{label}</Label>\r\n  <Input type={type} value={value} placeholder={placeholder} onChange={changer}/>\r\n</Form>\r\n)\r\n}\r\n\r\n","import React from 'react';\r\nimport { useStore, useList, createComponent} from 'effector-react';\r\nimport {\r\n  $cityList, $cityNames, $inputValue, addValue\r\n} from './model'\r\nimport {inputHandler,fetching , deleteItem, refetchWeather} from '../lib'\r\nimport { Header, H1, Text, Spinner, Section, List, ListItem, Button, Img, Search } from '../../ui';\r\n\r\nexport const HomePage = () => {\r\n  const names = useStore($cityNames)\r\n  React.useEffect(() => {\r\n    const timer = setInterval(() => {\r\n      refetchWeather(names)\r\n    }, 60000);\r\n    return () => clearInterval(timer);\r\n  }, [names]);\r\n\r\n   return (\r\n    <>\r\n      <Header className=\"App-header\">\r\n        <H1>Классное погодное приложение</H1>\r\n        <SpinnerContainer spinner={Spinner}></SpinnerContainer>\r\n      </Header>\r\n      <Section>\r\n        <Search value={useStore($inputValue)} \r\n        changer={addValue} type='text'\r\n         placeholder='Например: Нижний Новгород'\r\n          submiter={inputHandler} label='Введите название города' />\r\n        {useStore($cityList).length > 0 ? <CityList /> : <Text>Добавьте город</Text>}\r\n      </Section>\r\n    </>\r\n  );\r\n}\r\nconst CityList = () => useList($cityList, ({ name, weather, temperature, cod, feels }, index) => {\r\n  const listItem =\r\n    cod === 200 ? <ListItem>\r\n      В городе {name} в данный момент  {weather[0].description}, температура воздуха\r\n      составляет {parseInt(temperature)} &#176;\r\n      по цельсию, чувствуется как {parseInt(feels)}&#176;\r\n      по цельсию <Img alt='погодное условие' src={`http://openweathermap.org/img/w/${weather[0].icon}.png`}/><Button type='button' onClick={() => {\r\n        deleteItem(index)\r\n      }}>Удалить</Button>\r\n    </ListItem> : null\r\n  return <List>{listItem}</List>\r\n})\r\nconst SpinnerContainer = createComponent(fetching.pending, (_, pending) => (\r\n  pending ? <Spinner>Идёт загрузка, пожалуйста, подождите</Spinner> : null\r\n))\r\n","import React from 'react'\r\nimport { Normalize } from \"styled-normalize\"\r\nimport {HomePage} from './pages'\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <Normalize />\r\n      <HomePage/>\r\n    </>\r\n  )\r\n}\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}