{"version":3,"sources":["global-styles.js","features/fetching/model/token.js","features/fetching/model/config.js","features/fetching/model/baseUri.js","features/fetching/index.js","features/inputhandler/index.js","features/refetching/index.js","pages/home/model.js","ui/atoms/input.js","ui/atoms/title.js","ui/atoms/listItem.js","ui/atoms/list.js","ui/atoms/label.js","ui/atoms/form.js","ui/atoms/header.js","ui/atoms/text.js","ui/atoms/button.js","ui/atoms/spinner.js","ui/atoms/section.js","ui/atoms/img.js","ui/molecules/search.js","pages/home/page.js","app.js","index.js"],"names":["GlobalStyles","createGlobalStyle","$token","createStore","$requestConfig","units","lang","$baseUri","fetching","createEffect","handler","city","a","async","url","getState","fetch","req","json","triggerSample","createEvent","inputHandler","e","preventDefault","weatherUpdate","ids","addValue","deleteItem","$ids","JSON","parse","localStorage","getItem","name","on","done","state","result","cod","find","id","index","filter","_","i","$cityList","item","push","weather","temperature","main","temp","feels","feels_like","ent","oldValue","indexOf","list","$inputValue","currentTarget","value","reset","updates","watch","newState","setItem","shortName","stringify","length","sample","source","clock","target","Input","styled","input","H1","h1","ListItem","li","List","ul","Label","label","Form","form","Header","header","Text","div","Button","button","spin","keyframes","Spinner","Section","section","Img","img","Search","submitter","placeholder","type","changer","buttonText","onSubmit","onChange","onClick","HomePage","useStore","React","useEffect","timer","setInterval","clearInterval","className","SpinnerContainer","spinner","CityList","useList","listItem","description","parseInt","alt","src","icon","createComponent","pending","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0a5cf098.chunk.js","sourcesContent":["import { createGlobalStyle } from \"styled-components\"\r\n\r\nexport const GlobalStyles = createGlobalStyle`\r\n\r\nbody {\r\n  height: 100vh;\r\n  display: grid;\r\n}\r\n#root {\r\n  height: 100vh;\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\n`\r\n","import { createStore } from \"effector\"\r\n\r\nexport const $token = createStore(\"a82f5bd7cf235d2d97cf411fd97a845d\")\r\n","import { createStore } from \"effector\"\r\n\r\nexport const $requestConfig = createStore({\r\n  units: \"metric\",\r\n  lang: \"ru\",\r\n})\r\n","import { createStore } from \"effector\"\r\n\r\nexport const $baseUri = createStore(\r\n  \"https://api.openweathermap.org/data/2.5/weather?\"\r\n)\r\n","import { createEffect } from \"effector\"\r\n\r\nimport { $baseUri, $requestConfig, $token } from \"./model\"\r\n\r\nexport const fetching = createEffect({\r\n  handler: async (city) => {\r\n    const url = `${$baseUri.getState()}APPID=${$token.getState()}&units=${\r\n      $requestConfig.getState().units\r\n    }&lang=${$requestConfig.getState().lang}&q=${city}`\r\n    const req = await fetch(url)\r\n    return req.json()\r\n  },\r\n})\r\n","import { createEvent } from \"effector\"\r\nexport const triggerSample = createEvent(\"trigger sample\")\r\n\r\nexport const inputHandler = (e) => {\r\n  e.preventDefault()\r\n  triggerSample()\r\n}\r\n","import { createEffect } from \"effector\"\r\n\r\nexport const weatherUpdate = createEffect({\r\n  handler: async (ids) => {\r\n    const url = `https://api.openweathermap.org/data/2.5/group?id=${ids}&units=metric&appid=a82f5bd7cf235d2d97cf411fd97a845d&lang=ru`\r\n    const req = await fetch(url)\r\n    return req.json()\r\n  },\r\n})\r\n","import { sample, createStore, createEvent } from \"effector\"\r\nimport { fetching, triggerSample, weatherUpdate } from \"../../features\"\r\nexport const addCity = createEvent(\"add city\")\r\nexport const addValue = createEvent(\"add input value\")\r\nexport const deleteItem = createEvent(\"delete item\")\r\n\r\nexport const $ids = createStore(\r\n  JSON.parse(localStorage.getItem(\"cityIds\")) || [],\r\n  { name: \"cityIds\" }\r\n)\r\n  .on(fetching.done, (state, { result }) => {\r\n    if (result.cod !== 200 || state.find((id) => id === result.id)) {\r\n      return state\r\n    }\r\n    state = [...state, result.id]\r\n    return state\r\n  })\r\n  .on(deleteItem, (state, index) => state.filter((_, i) => i !== index))\r\nexport const $cityList = createStore(\r\n  JSON.parse(localStorage.getItem(\"cityList\")) || [],\r\n  { name: \"cityList\" }\r\n)\r\n  .on(fetching.done, (state, { result }) => {\r\n    state = [...state]\r\n    const oldValue = state.find((item) => item.id === result.id)\r\n    if (oldValue) {\r\n      return state\r\n    } else {\r\n      state.push({\r\n        name: result.name,\r\n        weather: result.weather,\r\n        temperature: result.main.temp,\r\n        cod: result.cod,\r\n        id: result.id,\r\n        feels: result.main.feels_like,\r\n      })\r\n    }\r\n    return state\r\n  })\r\n  .on(weatherUpdate.done, (state, { result }) => {\r\n    state = [...state]\r\n    for (let ent of result.list) {\r\n      let oldValue = state.find((item) => item.id === ent.id)\r\n      if (oldValue) {\r\n        state[state.indexOf(oldValue)] = {\r\n          ...oldValue,\r\n          temperature: ent.main.temp,\r\n          feels: ent.main.feels_like,\r\n          weather: ent.weather,\r\n        }\r\n      }\r\n    }\r\n    return state\r\n  })\r\n  .on(deleteItem, (state, index) => state.filter((_, i) => i !== index))\r\n\r\nexport const $inputValue = createStore(\"\")\r\n  .on(addValue, (_, e) => e.currentTarget.value)\r\n  .reset(fetching)\r\n\r\n$ids.updates.watch((newState) =>\r\n  localStorage.setItem($ids.shortName, JSON.stringify(newState))\r\n)\r\n$cityList.updates.watch((newState) =>\r\n  localStorage.setItem($cityList.shortName, JSON.stringify(newState))\r\n)\r\n$cityList.getState().length < 1 && fetching(\"МОСКВА\")\r\n$ids.getState().length > 0 && weatherUpdate($ids.getState())\r\n// guard({\r\n//   source: $cityList,\r\n//   filter: store => store.length < 1,\r\n//   target: fetching('Москва')\r\n// })\r\n// guard({\r\n//   source: $cityNames,\r\n//   filter: name => name.length > 0,\r\n//   target: refetchWeather\r\n// })\r\n\r\nsample({\r\n  source: $inputValue,\r\n  clock: triggerSample,\r\n  target: fetching,\r\n})\r\n","import styled from \"styled-components\"\r\n\r\nexport const Input = styled.input`\r\n  width: 18rem;\r\n  height: 2rem;\r\n  background-color: lightgray;\r\n  border-radius: 3px;\r\n  border: none;\r\n  color: black;\r\n  margin: 0 10px;\r\n  padding-left: 18px;\r\n  ::placeholder {\r\n    font-size: 17px;\r\n    width: 100%;\r\n    color: black;\r\n  }\r\n`\r\n","import styled from \"styled-components\"\r\n\r\nexport const H1 = styled.h1`\r\n  margin: 0;\r\n  width: 100%;\r\n  height: 30%;\r\n  color: white;\r\n  font-size: 4rem;\r\n  text-align: center;\r\n  @media (max-width: 768px) {\r\n    width: 80%;\r\n    position: relative;\r\n    left: 50%;\r\n    top: 50%;\r\n    transform: translate(-50%, -50%);\r\n    font-size: 2rem;\r\n  }\r\n`\r\n","import styled from \"styled-components\"\r\n\r\nexport const ListItem = styled.li`\r\n  display: grid;\r\n  margin-left: -15px;\r\n  grid-gap: 20px;\r\n  grid-template-columns: 1fr 20px 120px;\r\n  color: #fff;\r\n  font-size: 17px;\r\n  width: 98%;\r\n`\r\n","import styled from \"styled-components\"\r\n\r\nexport const List = styled.ul`\r\n  height: 100%;\r\n  list-style: none;\r\n  margin-bottom: 0;\r\n`\r\n","import styled from \"styled-components\"\r\n\r\nexport const Label = styled.label`\r\n  padding-left: 20px;\r\n  font-size: 25px;\r\n  color: #fff;\r\n`\r\n","import styled from \"styled-components\"\r\n\r\nexport const Form = styled.form``\r\n","import styled from \"styled-components\"\r\n\r\nexport const Header = styled.header`\r\n  position: relative;\r\n  height: 150px;\r\n  background: linear-gradient(to right, #2c3e50, #3498db);\r\n  @media (max-width: 768px) {\r\n    position: relative;\r\n    height: 250px;\r\n  }\r\n`\r\n","import styled from \"styled-components\"\r\n\r\nexport const Text = styled.div`\r\n  text-align: center;\r\n  color: #fff;\r\n  font-size: 36px;\r\n`\r\n","import styled from \"styled-components\"\r\n\r\nexport const Button = styled.button`\r\n  border-style: none;\r\n  outline: none;\r\n  width: 120px;\r\n  height: 30px;\r\n  border-radius: 10px;\r\n  background-color: green;\r\n  color: #fff;\r\n  :hover {\r\n    opacity: 0.9;\r\n  }\r\n  :active {\r\n    background-color: red;\r\n  }\r\n`\r\n","import styled, { keyframes } from \"styled-components\"\r\n\r\nconst spin = keyframes`\r\n  0% {\r\n    transform: rotate(0deg);\r\n  }\r\n  100% {\r\n    transform: rotate(360deg);\r\n  }  \r\n`\r\n\r\nexport const Spinner = styled.div`\r\n  display: inline-block;\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 0%;\r\n  background-color: green;\r\n  color: #fff;\r\n  font-size: 16px;\r\n  width: 280px;\r\n  height: 20px;\r\n  text-align: center;\r\n  border-radius: 5px;\r\n  ::after {\r\n    content: \" \";\r\n    display: block;\r\n    position: absolute;\r\n    left: 75%;\r\n    width: 35px;\r\n    height: 35px;\r\n    border-radius: 50%;\r\n    border: 6px solid #fff;\r\n    border-color: yellow transparent yellow transparent;\r\n    animation: 1.2s ${spin} linear infinite;\r\n  }\r\n  @media (max-width: 768px) {\r\n    top: 10%;\r\n    left: 0;\r\n    width: 100%;\r\n    background-color: none;\r\n  }\r\n`\r\n","import styled from \"styled-components\"\r\n\r\nexport const Section = styled.section`\r\n  min-height: 740px;\r\n  background: linear-gradient(to right, #2c3e50, #4ca1af);\r\n`\r\n","import styled from \"styled-components\"\r\n\r\nexport const Img = styled.img`\r\n  width: 30px;\r\n  height: 30px;\r\n`\r\n","import React from \"react\"\r\n\r\nimport { Form, Input, Label, Button } from \"../atoms\"\r\n\r\nexport const Search = ({\r\n  submitter,\r\n  value,\r\n  placeholder,\r\n  type,\r\n  changer,\r\n  label,\r\n  buttonText,\r\n}) => {\r\n  return (\r\n    <Form onSubmit={submitter}>\r\n      <Label>{label}</Label>\r\n      <Input\r\n        type={type}\r\n        value={value}\r\n        placeholder={placeholder}\r\n        onChange={changer}\r\n      />\r\n      <Button onClick={submitter}>{buttonText}</Button>\r\n    </Form>\r\n  )\r\n}\r\n","import React from \"react\"\r\nimport { useStore, useList, createComponent } from \"effector-react\"\r\nimport { $cityList, $inputValue, addValue, deleteItem, $ids } from \"./model\"\r\nimport { inputHandler, fetching, weatherUpdate } from \"../../features\"\r\nimport {\r\n  Header,\r\n  H1,\r\n  Text,\r\n  Spinner,\r\n  Section,\r\n  List,\r\n  ListItem,\r\n  Button,\r\n  Img,\r\n  Search,\r\n} from \"../../ui\"\r\n\r\nexport const HomePage = () => {\r\n  const ids = useStore($ids)\r\n  React.useEffect(() => {\r\n    const timer = setInterval(() => {\r\n      weatherUpdate(ids)\r\n    }, 60000)\r\n    return () => clearInterval(timer)\r\n  }, [ids])\r\n\r\n  return (\r\n    <>\r\n      <Header className=\"App-header\">\r\n        <H1>Классное погодное приложение</H1>\r\n        <SpinnerContainer spinner={Spinner}></SpinnerContainer>\r\n      </Header>\r\n      <Section>\r\n        <Search\r\n          value={useStore($inputValue)}\r\n          changer={addValue}\r\n          type=\"text\"\r\n          placeholder=\"Например: Нижний Новгород\"\r\n          submitter={inputHandler}\r\n          label=\"Введите название города\"\r\n          buttonText=\"добавить город\"\r\n        />\r\n        {useStore($cityList).length > 0 ? (\r\n          <CityList />\r\n        ) : (\r\n          <Text>Добавьте город</Text>\r\n        )}\r\n      </Section>\r\n    </>\r\n  )\r\n}\r\nconst CityList = () =>\r\n  useList($cityList, ({ name, weather, temperature, cod, feels }, index) => {\r\n    const listItem =\r\n      cod === 200 ? (\r\n        <ListItem>\r\n          В городе {name} в данный момент {weather[0].description}, температура\r\n          воздуха составляет {parseInt(temperature)} &#176; по цельсию,\r\n          чувствуется как {parseInt(feels)}&#176; по цельсию\r\n          <Img\r\n            alt=\"погодное условие\"\r\n            src={`http://openweathermap.org/img/w/${weather[0].icon}.png`}\r\n          />\r\n          <Button\r\n            type=\"button\"\r\n            onClick={() => {\r\n              deleteItem(index)\r\n            }}\r\n          >\r\n            Удалить\r\n          </Button>\r\n        </ListItem>\r\n      ) : null\r\n    return <List>{listItem}</List>\r\n  })\r\nconst SpinnerContainer = createComponent(fetching.pending, (_, pending) =>\r\n  pending ? <Spinner>Идёт загрузка, пожалуйста, подождите</Spinner> : null\r\n)\r\n","import React from \"react\"\r\nimport { Normalize } from \"styled-normalize\"\r\nimport { GlobalStyles } from \"./global-styles\"\r\nimport { HomePage } from \"./pages\"\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <Normalize />\r\n      <GlobalStyles />\r\n      <HomePage />\r\n    </>\r\n  )\r\n}\r\nexport default App\r\n","import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\n\r\nimport App from \"./app\"\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"))\r\n"],"sourceRoot":""}